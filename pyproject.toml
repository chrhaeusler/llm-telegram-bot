# pyproject.toml
# ----------------
# Project metadata and centralized configuration
# Tools configured: poetry (for dependencies), black, ruff, mypy
#
# Commands to remember:
# Install dependencies: poetry install
# Add a package: poetry add <package-name>
# Update pyproject.toml: poetry update

[tool.poetry]
name = "llm-telegram-bot"
version = "0.1.0"
description = "A Python project integrating Telegram bot with LLM API"
authors = ["Christian Olaf HÃ¤usler <your.email@example.com>"]
packages = [{ include = "llm_telegram_bot", from = "src" }]
include = ["src/llm_telegram_bot/py.typed"]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.11"               # Base Python version
aiohttp = "^3.8"               # Async HTTP client (used by TelegramClient)
langdetect = "^1.0.9"
python-telegram-bot = "^13.15" # Telegram API wrappers (bump to latest patch)
PyYAML = "^6.0"                # YAML parsing/serialization
pydantic = "^2.0"              # Typed settings & validation (future-proof config)

[tool.poetry.group.dev.dependencies]
black = { version = "^23.9.1", allows-prereleases = false } # Code formatter
isort = "^5.12"
pytest = "^7.2"                                             # Test framework (upgrade for pytest-asyncio)
pytest-asyncio = "^0.21"                                    # Async support for your async tests
pytest-cov = "^4.0"                                         # Coverage reports
mypy = "^1.5.1"                                             # Static typing checks
ruff = "^0.11.8"                                            # Linting & import sorting (upgrade to latest)

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

# --------------------------------------------------
# Ruff configuration for linting and formatting
#
# Commands:
#   ruff check .     # to lint code
#   ruff format .    # to auto-format code
# --------------------------------------------------

[tool.ruff]
line-length = 120
target-version = "py311"
exclude = ["tests/*", "tmp/*"]
fix = true

[tool.ruff.lint]
select = ["E", "F", "W", "I", "N"]
ignore = ["E501"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

# --------------------------------------------------
# Black configuration for code formatting
#
# Commands:
#   black .          # to auto-format code
# --------------------------------------------------

[tool.black]
line-length = 120
target-version = ["py311"]
skip-string-normalization = true # Keep double quotes if possible
