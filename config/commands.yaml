# config/commands.yaml
# This file defines all user-facing slash commands for the Telegram chatbot.
# Each command includes a usage string and a description.
# These are parsed at runtime to power help messages and routing behavior.
# config/commands.yaml
# Defines all slash commands: usage, description, and (optionally) args.

# ── Help & Status ────────────────────────────────────────────────────────
help:
  usage: /help
  description: Show this help message with available commands
  args: []

status:
  usage: /status
  description: Check whether the current bot, service, model, etc. are usable
  args: []

undo:
  usage: /undo
  description: Undo the last configuration change (e.g. model/service)
  args: []

# ── Bots & Services ─────────────────────────────────────────────────────
bots:
  usage: /bots
  description: List all available bots
  args: []

bot:
  usage: /bot [<index>|start|stop]
  description: >
    Manage Bot
      • no args: show current bot's settings (service, model, temp, max tokens).  
      • <index>: switch to bot by its number (from `/bots`).  
      • start: resume sending messages to LLM (online).  
      • stop: pause messaging (offline).
  args:
    - name: action
      type: str
      choices: [start, stop]
      optional: true
    - name: index
      type: int
      optional: true

services:
  usage: /services
  description: List all available LLM services
  args: []

cservice:
  usage: /cservice <name|index>
  description: Change the active LLM service by name or list index
  args:
    - name: service
      type: str

# ── Models ────────────────────────────────────────────────────────────────
models:
  usage: /models
  description: List all models for the current service
  args: []

model:
  usage: /model [<name|index>]
  description: Show info about or switch to a specific model
  args:
    - name: model
      type: str
      optional: true

maxtokens:
  usage: /tokens <int>
  description: Set or view max tokens (positive integer only)
  args:
    - name: tokens
      type: int

temperature:
  usage: /temp <float>
  description: Set model temperature (0.0–2.0, controls creativity)
  args:
    - name: temperature
      type: float

setdefaults:
  usage: /setdefaults
  description: Save current config (service, model, etc.) as bot’s default
  args: []

defaults:
  usage: /defaults [global]
  description: Reset to bot defaults or use global defaults when “global” is provided
  args:
    - name: scope
      type: str
      choices: [global]
      optional: true

# ── Save & Export ────────────────────────────────────────────────────────
savestring:
  usage: /savethis [<text>]
  description: Save any string locally (doesn’t send to LLM)
  args:
    - name: text
      type: str
      optional: true

saveuser:
  usage: /su [<filename>]
  description: Save the last user input to file (timestamped if no name)
  args:
    - name: filename
      type: str
      optional: true

saveresponse:
  usage: /sr [--ask|<filename>]
  description: >
    Save the last model response.  
    If “--ask”, prompt for a filename;  
    else use provided name (or timestamp).
  args:
    - name: ask
      flag: --ask
      type: bool
      optional: true
    - name: filename
      type: str
      optional: true

# ── History ───────────────────────────────────────────────────────────────
history:
  usage: /history <on|off|sum|new|save|load|files> [arg]
  description: >
    Manage chat history:
      • on/off: toggle logging  
      • sum: summarize chat & confirm summary as new history  
      • new <text>: replace history  
      • save [filename]: save to file  
      • load <index|filename>  
      • files: list saved histories
  args:
    - name: action
      type: str
      choices: [on, off, sum, new, save, load, files]
    - name: arg
      type: str
      optional: true

# ── Jailbreaks ───────────────────────────────────────────────────────────
jailbreaks:
  usage: /jbs
  description: List all available jailbreak prompts
  args: []

sendjailbreak:
  usage: /jb <index>
  description: Send a specific jailbreak prompt to the model
  args:
    - name: index
      type: int
