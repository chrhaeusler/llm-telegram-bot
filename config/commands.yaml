# config/commands.yaml
# To Do: line breaks in CLI

# config/commands.yaml
# This file defines all user-facing slash commands for the Telegram chatbot.
# Each command includes a usage string and a description.
# These are parsed at runtime to power help messages and routing behavior.


# *Help & Status*
help:
  usage: "/help"
  description: "Show this help message with available commands"

showsettings:
  usage: "/showset"
  description: "Show current bot, service, model, temperature & max tokens"

status:
  usage: "/status"
  description: "Check if current bot, service, model, etc. are usable"

undo:
  usage: "/undo"
  description: "Undo the last configuration change (e.g., model/service)"


# *Bots & Services*
bots:
  usage: "/bots"
  description: "List all available bots (as defined in config.yaml" # with index in front of the name
  
bot:
  usage: "/bot <start|stop|<int>"
  description: "Switch to bot by index"
    - start: send inputs to the LLM service (default)
    - stop: stop sending messages to the LLM service (offline-mode)
    - <int>: switch to bot as indexed in list provided by command "/bots"

services:
  usage: "/services"
  description: "List all available LLM services"  # with index in front of the name

cservice:
  usage: "/cservice <service_name | <int>"
  description: "Change the active LLM service by name or index" # answer with "services not found" and call /services to list services

# *Models*
models:
  usage: "/models"
  description: "List models for the current service" # with index in front of the name

model:
  usage: "/model [<model_name> | <int>]"
  description: "Show info about or switch to a specific model by name or index" # answer with "model not found for <services<" and call /models to list models

maxtokens:
  usage: "/tokens <int>"
  description: "Set or view max tokens (positive integer only)"

temperature:
  usage: "/temp <float>"
  description: "Set model temperature (0.0 to 2.0, controls creativity)"

setasdefaults:
  usage: "/setdefaults"
  description: "Save current config (service, model, etc.) as bot's default"

defaults:
  usage: "/defaults"
  description: "Reset to bot defaults or use global defaults with 'global'"

# *Save & Export*
savestring:
  usage: "/savethis [<text>]"
  description: "Save any string (without sending it to LLM)"

saveuser:
  usage: "/su [<filename>]"
  description: "Save the last user input to a file (timestamped if no name)"

saveresponse:
  usage: "/sr [--ask | <filename>]"
  description: "Save the last model response (filename optional or prompt)" # if "--ask", send the model's response back to the model and ask for a filename and use it (we want to ask the model for code snippets in different syntax (txt, python, json, markdown, yaml) and be able to save it with the according file extension


# *History*
history:
  usage: "/history <on|off|sum|<new> [arg]|save|load|files"
  description: >
    Manage chat history:
    - on/off: toggle logging
    - sum: Let model summarize chat; ask user to accept summary as new history
    - new <text>: replace history with new content
    - save: save current history to file with timestamp or argument as filename.txt
    - load <n|filename>: load history by number or name
    - files: list history files (Indexed and ordered from earliest to oldest)

# *Jailbreaks*
jailbreaks:
  usage: "/jbs"
  description: "List all available jailbreak prompts" # with index in front of the name

sendjailbreak:
  usage: "/jb <int>"
  description: "Send a specific jailbreak prompt to the model
