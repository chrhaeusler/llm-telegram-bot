# config/commands.yaml
# This file defines all user-facing slash commands for the Telegram chatbot.
# Each command includes a usage string and a description.
# These are parsed at runtime to power help messages and routing behavior.
# config/commands.yaml
# Defines all slash commands: usage, description, and (optionally) args.

# ── Help & Status ────────────────────────────────────────────────────────
help:
  usage: /help
  description: Show this help message with available commands
  args: []

status:
  usage: /status
  description: Check whether the current bot, service, model, etc. are usable
  args: []

# TO DO
undo:
  usage: /undo
  description: Undo the last configuration change (e.g. model/service)
  args: []

# ── Bots & Services ─────────────────────────────────────────────────────
bots:
  usage: /bots
  description: Lists (enabled) configured bots
  args: []

bot:
  usage: /bot [pause|resume]
  description: >
    Manage Bot
      • no args: show current bot's settings.
      • pause: pause routing messages to LLM.
      • resume: resume routing messages.
  args:
    - name: action
      type: str
      choices: [start, stop]
      optional: true
    - name: index
      type: int
      optional: true

service:
  usage: /service [<name>|<index>]
  description: >
    Manage service
    • no args: Show current and available services
    • <name>|index>: Switch to that service
  args:
    - name: name_or_index
      type: str
      optional: true
      description: Name or index of the service to switch to

# ── Models ────────────────────────────────────────────────────────────────
models:
  usage: /models
  description: List all models for the current service
  args: []

model:
  usage: /model [<name|index>]
  description: Show info about or switch to a specific model
  args:
    - name: model
      type: str
      optional: true

tokens:
  usage: /tokens <int>
  description: Set or view max tokens (positive integer only)
  args:
    - name: tokens
      type: int

temperature:
  usage: /temp <float>
  description: Set model temperature (0.0–2.0, controls creativity)
  args:
    - name: temperature
      type: float

# TO DO
setdefaults:
  usage: /setdefaults
  description: Save current config (service, model, etc.) as bot’s default
  args: []

# TO DO
defaults:
  usage: /defaults [global]
  description: Reset to bot defaults or use global defaults when “global” is provided
  args:
    - name: scope
      type: str
      choices: [global]
      optional: true

# ── Save & Export ────────────────────────────────────────────────────────
# TO DO
savestring:
  usage: /savethis [<text>]
  description: Save any string locally (doesn’t send to LLM)
  args:
    - name: text
      type: str
      optional: true

# TO DO
savelastprompt:
  usage: /slp [<filename>]
  description: Save the last user input to file (timestamped if no name)
  args:
    - name: filename
      type: str
      optional: true

# TO DO
savelastresponse:
  usage: /slr [--ask|<filename>]
  description: >
    • Save the last model response.
    • If “--ask”, prompt for a filename;
    • else use provided name (or timestamp).
  args:
    - name: ask
      flag: --ask
      type: bool
      optional: true
    - name: filename
      type: str
      optional: true

# ── Roleplay & Memory Commands ────────────────────────────────────────────
# TO DO
char:
  usage: /char <list|switch|show|update> [<value>]
  description: >
    Manage characters & scenarios:
      • list:   list available chars + their scenarios
      • show:   show current (or indexed) char+scenario details
      • reset:  reload char from its YAML file
      • switch: switch to given char (by name or index)
  args:
    - name: action
      type: str
      choices: [list, switch, show, reset]
    - name: value
      type: str
      optional: true

memory:
  usage: /memory <show|update> [<value>]
  description: >
    Manage session memory:
      • show:    display all memory buckets
      • update:  add or replace a memory entry
  args:
    - name: action
      type: str
      choices: [show, update]
    - name: value
      type: str
      optional: true

# ── History ───────────────────────────────────────────────────────────────
# TO DO
history:
  usage: /history <on|off|files|sum|extract|new|save|load> [arg]
  description: >
    Manage chat history (per char+scenario):
      • on/off:   toggle logging
      • files:    list saved histories
      • sum:      summarize chat & confirm replacing history
      • extract:  extract key facts → memory
      • new <t>:  replace history with text <t>
      • save <f>: save current history to file <f>
      • load <v>: load saved history by index or name
  args:
    - name: action
      type: str
      choices: [on, off, files, sum, extract, new, save, load]
    - name: arg
      type: str
      optional: true

# ── Jailbreaks ───────────────────────────────────────────────────────────
# TO DO
jailbreaks:
  usage: /jbs
  description: List all available jailbreak prompts
  args: []

# TO DO
sendjailbreak:
  usage: /jb <index>
  description: Send a specific jailbreak prompt to the model
  args:
    - name: index
      type: int
